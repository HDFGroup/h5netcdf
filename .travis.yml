language: python
sudo: false # use container based build
notifications:
  email: false

matrix:
  include:
  - python: 2.7
  - python: 3.4
  - python: 3.5
  - python: 3.6
  - python: 2.7
    env: H5PY_VERSION="=2.1"
  allow_failures:
  - python: 2.7
    env: H5PY_VERSION="=2.1"

before_install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda-3.7.3-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-3.7.3-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

install:
  - conda create -c conda-forge --yes -n test_env python=$TRAVIS_PYTHON_VERSION pip pytest h5py$H5PY_VERSION cython netCDF4
  - source activate test_env
  - python setup.py install
  - export HS_ENDPOINT=http://52.4.181.237:5104
  - curl ${HS_ENDPOINT}/about && export WITHRESTAPI=--restapi
  - if [ ! -z "${WITHRESTAPI}" ]; then
      pip install requests pytz ;
      pip install git+https://github.com/HDFGroup/h5pyd.git@dimscale-fixes ;
      export H5PYD_TEST_FOLDER=/home/test_user1/h5netcdf_test/${TRAVIS_PYTHON_VERSION} ;
    fi

script:
  - echo python_version ${TRAVIS_PYTHON_VERSION}
  - echo endpoint ${HS_ENDPOINT}
  - echo test folder ${H5PYD_TEST_FOLDER}
  - echo user ${HS_USERNAME}
  - echo password ${HS_PASSWORD}
  - echo withrestapi ${WITHRESTAPI}
  - py.test -v ${WITHRESTAPI} h5netcdf/
